<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Hossameldin Mohammed</title>
    <link>https://hossameldinmohammed.netlify.app/post/</link>
      <atom:link href="https://hossameldinmohammed.netlify.app/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 19 Sep 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://hossameldinmohammed.netlify.app/media/icon_hufb2546e6b2ec17dc2f4c687cb3378816_19299_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://hossameldinmohammed.netlify.app/post/</link>
    </image>
    
    <item>
      <title>Linear Mixed-Effects Models</title>
      <link>https://hossameldinmohammed.netlify.app/post/2/</link>
      <pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://hossameldinmohammed.netlify.app/post/2/</guid>
      <description>
&lt;script src=&#34;https://hossameldinmohammed.netlify.app/post/2/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(library(AER))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(broom))
suppressPackageStartupMessages(library(nlme))
suppressPackageStartupMessages(library(lme4))
suppressPackageStartupMessages(library(lmerTest))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Basic regression models are fitted with a sample of &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; &lt;em&gt;independent elements&lt;/em&gt;. Given a set of &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; regressors &lt;span class=&#34;math inline&#34;&gt;\(X_{i,j}\)&lt;/span&gt; and a continuous response &lt;span class=&#34;math inline&#34;&gt;\(Y_i\)&lt;/span&gt;, we fit a model&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y_i = \beta_0 + \beta_1 X_{i,1} + \beta_2 X_{i,2} + \ldots + \beta_p X_{i,p} + \varepsilon_{i} \; \; \; \; \text{for} \; i = 1, \ldots, n\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The coefficients &lt;span class=&#34;math inline&#34;&gt;\(\beta_0, \dots, \beta_p\)&lt;/span&gt; are fixed and constant for &lt;strong&gt;all the observed values&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(\left(x_{i,1}, \dots, x_{i,p}, y_i\right)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;These coefficients are called &lt;strong&gt;fixed effects&lt;/strong&gt;. It is of our interest to evaluate whether they are statistically significant or not on the response.&lt;/p&gt;
&lt;div id=&#34;grunfelds-investment-dataset&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.1. Grunfeld’s Investment Dataset&lt;/h3&gt;
&lt;p&gt;Consider the following example: to study how gross investment depends on the firm’s value and capital stock, &lt;a href=&#34;https://ezproxy.library.ubc.ca/login?url=https://search.proquest.com/docview/301899386?pq-origsite=summon&#34;&gt;Grunfeld (1958)&lt;/a&gt; collected data from eleven different companies over the years 1935-1954.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The data frame &lt;code&gt;Grunfeld&lt;/code&gt; contains 220 observations from a balanced panel of 11 firms from 1935 to 1954 (20 observations per &lt;code&gt;firm&lt;/code&gt;). The dataset includes a continuous response &lt;code&gt;investment&lt;/code&gt; subject to two explanatory variables, &lt;code&gt;market_value&lt;/code&gt; and &lt;code&gt;capital&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Firstly, we will load the data which has the following variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;investment&lt;/code&gt;: the gross investment in millions of dollars (additions to plant and equipment along with maintenance), a continuous response.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;market_value&lt;/code&gt;: the firm’s market value in millions of dollars, a continuous explanatory variable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;capital&lt;/code&gt;: stock of plant and equipment in millions of dollars, a continuous explanatory variable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;firm&lt;/code&gt;: a nominal explanatory variable with eleven levels indicating the firm (&lt;code&gt;General Motors&lt;/code&gt;, &lt;code&gt;US Steel&lt;/code&gt;, &lt;code&gt;General Electric&lt;/code&gt;, &lt;code&gt;Chrysler&lt;/code&gt;, &lt;code&gt;Atlantic Refining&lt;/code&gt;, &lt;code&gt;IBM&lt;/code&gt;, &lt;code&gt;Union Oil&lt;/code&gt;, &lt;code&gt;Westinghouse&lt;/code&gt;, &lt;code&gt;Goodyear&lt;/code&gt;, &lt;code&gt;Diamond Match&lt;/code&gt;, and &lt;code&gt;American Steel&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt;: the year of the observation (it will not be used in our analysis).&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(Grunfeld)
Grunfeld &amp;lt;- Grunfeld %&amp;gt;% rename(investment = invest, market_value = value)
head(Grunfeld)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   investment market_value capital           firm year
## 1      317.6       3078.5     2.8 General Motors 1935
## 2      391.8       4661.7    52.6 General Motors 1936
## 3      410.6       5387.1   156.9 General Motors 1937
## 4      257.7       2792.2   209.2 General Motors 1938
## 5      330.8       4313.2   203.4 General Motors 1939
## 6      461.2       4643.9   207.2 General Motors 1940&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tail(Grunfeld)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     investment market_value capital           firm year
## 215      6.433       39.961  73.827 American Steel 1949
## 216      4.770       36.494  75.847 American Steel 1950
## 217      6.532       46.082  77.367 American Steel 1951
## 218      7.329       57.616  78.631 American Steel 1952
## 219      9.020       57.441  80.215 American Steel 1953
## 220      6.281       47.165  83.788 American Steel 1954&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>COVID-19 Exploratory Data Analysis</title>
      <link>https://hossameldinmohammed.netlify.app/post/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hossameldinmohammed.netlify.app/post/1/</guid>
      <description>
&lt;script src=&#34;https://hossameldinmohammed.netlify.app/post/1/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;!-- ```{r setup, include=FALSE} --&gt;
&lt;!-- knitr::opts_chunk$set(collapse = TRUE) --&gt;
&lt;!-- ``` --&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is a personal Rmarkdown document I have created to visualize the COVID-19 updates and some preliminary exploratory data analysis (EDA). The source of this data is the &lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34;&gt;github repository&lt;/a&gt; created and maintained by the Coronavirus COVID-19 Global Cases by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(forecast))
suppressPackageStartupMessages(library(zoo))
suppressPackageStartupMessages(library(xts))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(gghighlight))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(directlabels))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
#suppressPackageStartupMessages(library(rjson))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;reading-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Reading the data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;COVID_confirmed_global_raw &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&amp;quot;) 
COVID_deaths_global_raw &amp;lt;-  read_csv(&amp;quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&amp;quot;) 
COVID_recovered_global_raw &amp;lt;-  read_csv(&amp;quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;reshaping-and-formatting-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Reshaping and formatting data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Reshape to longer format
COVID_confirmed_global_longer &amp;lt;- COVID_confirmed_global_raw %&amp;gt;% 
  pivot_longer(cols      = c(&amp;#39;1/22/20&amp;#39;:names(COVID_confirmed_global_raw)[ncol(COVID_confirmed_global_raw)]),
               names_to  = &amp;quot;date&amp;quot;,
               values_to = &amp;quot;n_cases&amp;quot;)
  

COVID_deaths_global_longer &amp;lt;- COVID_deaths_global_raw %&amp;gt;% 
  pivot_longer(cols      = c(&amp;#39;1/22/20&amp;#39;:names(COVID_deaths_global_raw)[ncol(COVID_deaths_global_raw)]),
               names_to  = &amp;quot;date&amp;quot;,
               values_to = &amp;quot;n_cases&amp;quot;)

COVID_recovered_global_longer &amp;lt;- COVID_recovered_global_raw %&amp;gt;% 
  pivot_longer(cols      = c(&amp;#39;1/22/20&amp;#39;:names(COVID_recovered_global_raw)[ncol(COVID_recovered_global_raw)]),
               names_to  = &amp;quot;date&amp;quot;,
               values_to = &amp;quot;n_cases&amp;quot;)


# change column names
colnames(COVID_confirmed_global_longer) &amp;lt;-  c(&amp;#39;state&amp;#39;, &amp;#39;country&amp;#39;, &amp;#39;lat&amp;#39;, &amp;#39;long&amp;#39;,&amp;#39;date&amp;#39;, &amp;#39;n_cases&amp;#39;)
colnames(COVID_deaths_global_longer) &amp;lt;-  c(&amp;#39;state&amp;#39;, &amp;#39;country&amp;#39;, &amp;#39;lat&amp;#39;, &amp;#39;long&amp;#39;,&amp;#39;date&amp;#39;, &amp;#39;n_cases&amp;#39;)
colnames(COVID_recovered_global_longer) &amp;lt;-  c(&amp;#39;state&amp;#39;, &amp;#39;country&amp;#39;, &amp;#39;lat&amp;#39;, &amp;#39;long&amp;#39;,&amp;#39;date&amp;#39;, &amp;#39;n_cases&amp;#39;)

# drop `state` column and create a `new_cases` column
COVID_confirmed_global_longer &amp;lt;- COVID_confirmed_global_longer %&amp;gt;% 
               select(-state)%&amp;gt;% 
               group_by(country, date) %&amp;gt;% 
               summarize(n_cases = sum(n_cases))  &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &amp;#39;country&amp;#39;. You can override using the `.groups` argument.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;COVID_deaths_global_longer &amp;lt;- COVID_deaths_global_longer %&amp;gt;% 
               select(-state)%&amp;gt;% 
               group_by(country, date) %&amp;gt;% 
               summarize(n_cases = sum(n_cases)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &amp;#39;country&amp;#39;. You can override using the `.groups` argument.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;COVID_recovered_global_longer &amp;lt;- COVID_recovered_global_longer %&amp;gt;% 
               select(-state) %&amp;gt;% 
               group_by(country, date) %&amp;gt;% 
               summarize(n_cases = sum(n_cases)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &amp;#39;country&amp;#39;. You can override using the `.groups` argument.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# convert date columns from character to date format
COVID_confirmed_global_longer$date &amp;lt;- as.Date(COVID_confirmed_global_longer$date, format = &amp;#39;%m/%d/%Y&amp;#39;)
COVID_deaths_global_longer$date &amp;lt;- as.Date(COVID_deaths_global_longer$date, format = &amp;#39;%m/%d/%Y&amp;#39;)
COVID_recovered_global_longer$date &amp;lt;- as.Date(COVID_recovered_global_longer$date, format = &amp;#39;%m/%d/%Y&amp;#39;)

COVID_confirmed_global_longer &amp;lt;- COVID_confirmed_global_longer %&amp;gt;% 
  arrange(country, date) %&amp;gt;% 
  mutate(new_cases = n_cases-lag(n_cases, default = 0))

COVID_deaths_global_longer &amp;lt;- COVID_deaths_global_longer %&amp;gt;% 
  arrange(country, date) %&amp;gt;% 
  mutate(new_cases = n_cases-lag(n_cases, default = 0))

COVID_recovered_global_longer &amp;lt;- COVID_recovered_global_longer %&amp;gt;% 
  arrange(country, date) %&amp;gt;% 
  mutate(new_cases = n_cases-lag(n_cases, default = 0))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s look at the current data format&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(head(COVID_confirmed_global_longer),format = &amp;#39;markdown&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;country&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;date&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_cases&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;new_cases&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;20-01-22&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;20-01-23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;20-01-24&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;20-01-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;20-01-26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;20-01-27&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-some-functions-for-quick-stats&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;creating some functions for quick stats&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world_summary &amp;lt;- function() {
   
  df1 &amp;lt;- COVID_confirmed_global_longer %&amp;gt;% 
    group_by(country) %&amp;gt;% 
    summarize(n_cases_today = max(n_cases),
              new_cases_today = dplyr::last(new_cases)) %&amp;gt;%
    ungroup() %&amp;gt;% 
    summarize(n_cases_total = sum(n_cases_today),
              new_cases_total = sum(new_cases_today))
  
  df2 &amp;lt;- COVID_deaths_global_longer %&amp;gt;% 
    group_by(country) %&amp;gt;% 
    summarize(n_cases_today = max(n_cases),
              new_cases_today = dplyr::last(new_cases)) %&amp;gt;% 
    ungroup() %&amp;gt;% 
    summarize(n_cases_total = sum(n_cases_today),
              new_cases_total = sum(new_cases_today))
  
  df3 &amp;lt;- COVID_recovered_global_longer %&amp;gt;%
    group_by(country) %&amp;gt;% 
    summarize(n_cases_today = max(n_cases),
              new_cases_today = dplyr::last(new_cases)) %&amp;gt;% 
    ungroup() %&amp;gt;% 
    summarize(n_cases_total = sum(n_cases_today),
              new_cases_total = sum(new_cases_today))
  
  print(paste0(&amp;quot;number of total confirmed cases in the world as of today:  &amp;quot;, df1$n_cases_total, &amp;quot; with &amp;quot;, df1$new_cases_total, &amp;quot; new cases&amp;quot;))
  print(paste0(&amp;quot;number of total deaths in the world  as of today:  &amp;quot;, df2$n_cases_total, &amp;quot; with &amp;quot;, df2$new_cases_total, &amp;quot; new deaths&amp;quot;))
  print(paste0(&amp;quot;number of total recovered cases in the world  as of today:  &amp;quot;, df3$n_cases_total, &amp;quot; with &amp;quot;, df3$new_cases_total, &amp;quot; new cases&amp;quot;))
  
}


country_summary &amp;lt;- function(country1) {
  
  df1 &amp;lt;- COVID_confirmed_global_longer %&amp;gt;% group_by(country) %&amp;gt;% dplyr::filter(country==country1) %&amp;gt;%  summarize(n_cases_today = max(n_cases),
              new_cases_today = dplyr::last(new_cases))
  df2 &amp;lt;- COVID_deaths_global_longer %&amp;gt;% group_by(country)%&amp;gt;% dplyr::filter(country==country1) %&amp;gt;% summarize(n_cases_today = max(n_cases),
              new_cases_today = dplyr::last(new_cases))
  df3 &amp;lt;- COVID_recovered_global_longer %&amp;gt;% group_by(country)%&amp;gt;% dplyr::filter(country==country1) %&amp;gt;% summarize(n_cases_today = max(n_cases),
              new_cases_today = dplyr::last(new_cases))
  #                                                            
  print(paste0(&amp;quot;number of confirmed cases in &amp;quot;, country1, &amp;quot; as of today:  &amp;quot;, df1$n_cases_today, &amp;quot; with &amp;quot;, df1$new_cases_today, &amp;quot; new cases&amp;quot;))
  # df1$n_cases_today

  print(paste0(&amp;quot;number of deaths in &amp;quot;, country1, &amp;quot; as of today:  &amp;quot;, df2$n_cases_today, &amp;quot; with &amp;quot;, df2$new_cases_today, &amp;quot; new deaths&amp;quot;))
  # df2$n_cases_today

  print(paste0(&amp;quot;number of recovered cases in &amp;quot;, country1, &amp;quot; as of today:  &amp;quot;, df3$n_cases_today, &amp;quot; with &amp;quot;, df3$new_cases_today, &amp;quot; new cases&amp;quot;))
  # df3$n_cases_today
  
}


world_summary()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of total confirmed cases in the world as of today:  227649349 with 593099 new cases&amp;quot;
## [1] &amp;quot;number of total deaths in the world  as of today:  4679139 with 8881 new deaths&amp;quot;
## [1] &amp;quot;number of total recovered cases in the world  as of today:  137249983 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;US&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in US as of today:  41993789 with 207886 new cases&amp;quot;
## [1] &amp;quot;number of deaths in US as of today:  672635 with 2635 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in US as of today:  6298082 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;Italy&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in Italy as of today:  4627699 with 4544 new cases&amp;quot;
## [1] &amp;quot;number of deaths in Italy as of today:  130233 with 66 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in Italy as of today:  4144608 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;Spain&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in Spain as of today:  4929546 with 3222 new cases&amp;quot;
## [1] &amp;quot;number of deaths in Spain as of today:  85783 with 44 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in Spain as of today:  150376 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;China&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in China as of today:  107838 with 49 new cases&amp;quot;
## [1] &amp;quot;number of deaths in China as of today:  4851 with 0 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in China as of today:  99228 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;Egypt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in Egypt as of today:  295639 with 588 new cases&amp;quot;
## [1] &amp;quot;number of deaths in Egypt as of today:  16935 with 14 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in Egypt as of today:  232179 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;Germany&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in Germany as of today:  4137062 with 9904 new cases&amp;quot;
## [1] &amp;quot;number of deaths in Germany as of today:  92928 with 22 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in Germany as of today:  3659260 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;country_summary(&amp;quot;France&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;number of confirmed cases in France as of today:  7029959 with 7756 new cases&amp;quot;
## [1] &amp;quot;number of deaths in France as of today:  116618 with 107 new deaths&amp;quot;
## [1] &amp;quot;number of recovered cases in France as of today:  415111 with 0 new cases&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- # Donut plot --&gt;
&lt;!-- ```{r warning=FALSE} --&gt;
&lt;!-- df &lt;- COVID_confirmed_global_longer %&gt;% mutate(country_sum = ifelse(n_cases &gt; 5000, country,&#34;other&#34;)) --&gt;
&lt;!-- df &lt;- df %&gt;% group_by(country_sum) --&gt;
&lt;!-- df &lt;- df %&gt;% summarize(count = max(n_cases)) --&gt;
&lt;!-- fig &lt;- df %&gt;% plot_ly(labels = ~country_sum, values = ~count, text = ~country_sum) --&gt;
&lt;!-- fig &lt;- fig %&gt;% add_pie(hole = 0.4) --&gt;
&lt;!-- fig &lt;- fig %&gt;% layout(title = &#34;Confirmed cases worldwide&#34;,  showlegend = F, --&gt;
&lt;!--                       xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE), --&gt;
&lt;!--                       yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)) --&gt;
&lt;!-- fig --&gt;
&lt;!-- ``` --&gt;
&lt;!-- # Multi-dimensional bar-chart --&gt;
&lt;!-- ```{r} --&gt;
&lt;!-- COVID_confirmed_global_longer %&gt;% --&gt;
&lt;!--   group_by(country) %&gt;% --&gt;
&lt;!--   plot_ly(x = ~date, y = ~n_cases, color = ~country) %&gt;% --&gt;
&lt;!--   add_bars(text = ~country)%&gt;% --&gt;
&lt;!--   layout(barmode = &#34;stack&#34;, --&gt;
&lt;!--          showlegend = FALSE)  --&gt;
&lt;!-- ``` --&gt;
&lt;!-- # A function for plotting COVID-19 cases for different countries --&gt;
&lt;!-- ```{r warning=FALSE} --&gt;
&lt;!-- plot_countries &lt;- function(df, curve_title, cumulative=TRUE, ...) { --&gt;
&lt;!--   df1 &lt;- df %&gt;%  --&gt;
&lt;!--     dplyr::filter(country %in% list(...)) --&gt;
&lt;!--   if (cumulative) { --&gt;
&lt;!--   p1 = ggplot(df1, aes(date, n_cases, group=country, color=country))+ --&gt;
&lt;!--     geom_line()+ --&gt;
&lt;!--     scale_x_date(date_breaks = &#34;3 days&#34;)+ --&gt;
&lt;!--     scale_y_log10(labels = function(x) format(x, scientific = FALSE), --&gt;
&lt;!--                   name = &#34;number of cases&#34;, --&gt;
&lt;!--                   breaks = scales::breaks_log(n = 10))+ --&gt;
&lt;!--     theme_bw()+ --&gt;
&lt;!--     theme(axis.text.x = element_text(angle = 90), legend.position = &#34;none&#34;)+ --&gt;
&lt;!--     ggtitle(curve_title)+ --&gt;
&lt;!--       geom_dl(data = df1, aes(label = country), method = list(dl.combine(&#34;first.points&#34;, &#34;last.points&#34;), cex = 0.8)) --&gt;
&lt;!--   } else{ --&gt;
&lt;!--   p1 = ggplot(df1, aes(date, new_cases, group=country, color=country))+ --&gt;
&lt;!--     geom_line()+ --&gt;
&lt;!--     scale_x_date(date_breaks = &#34;3 days&#34;)+ --&gt;
&lt;!--     scale_y_log10(labels = function(x) format(x, scientific = FALSE), --&gt;
&lt;!--                   name = &#34;number of cases&#34;, --&gt;
&lt;!--                   breaks = scales::breaks_log(n = 10))+ --&gt;
&lt;!--     theme_bw()+ --&gt;
&lt;!--     theme(axis.text.x = element_text(angle = 90), legend.position = &#34;none&#34;)+ --&gt;
&lt;!--     ggtitle(curve_title)+ --&gt;
&lt;!--       geom_dl(data = df1, aes(label = country), method = list(dl.combine(&#34;first.points&#34;, &#34;last.points&#34;), cex = 0.8)) --&gt;
&lt;!--   } --&gt;
&lt;!--   return(p1) --&gt;
&lt;!-- } --&gt;
&lt;!-- plot_countries(COVID_confirmed_global_longer, curve_title = &#34;Confirmed cases (cumulative)&#34;, cumulative = TRUE, &#34;US&#34;, &#34;Italy&#34;, &#34;Canada&#34;, &#34;Egypt&#34;,  &#34;china&#34;) --&gt;
&lt;!-- plot_countries(COVID_deaths_global_longer, curve_title = &#34;Death cases (cumulative)&#34;, cumulative = TRUE,&#34;US&#34;, &#34;Italy&#34;, &#34;Canada&#34;, &#34;Egypt&#34;,  &#34;china&#34;) --&gt;
&lt;!-- plot_countries(COVID_recovered_global_longer, curve_title = &#34;Recovered cases (cumulative)&#34;,cumulative = TRUE, &#34;china&#34;,&#34;US&#34;, &#34;Italy&#34;, &#34;Canada&#34;, &#34;Egypt&#34;,  &#34;china&#34;) --&gt;
&lt;!-- plot_countries(COVID_confirmed_global_longer, curve_title = &#34;New confirmed cases&#34;, cumulative = FALSE,&#34;US&#34;, &#34;Italy&#34;, &#34;Canada&#34;, &#34;Egypt&#34;,  &#34;china&#34;) --&gt;
&lt;!-- plot_countries(COVID_deaths_global_longer, curve_title = &#34;New death cases&#34;, cumulative = FALSE,&#34;US&#34;, &#34;Italy&#34;, &#34;Canada&#34;, &#34;Egypt&#34;,  &#34;china&#34;) --&gt;
&lt;!-- plot_countries(COVID_recovered_global_longer, curve_title = &#34;New recovered cases&#34;, cumulative = FALSE,&#34;US&#34;, &#34;Italy&#34;, &#34;Canada&#34;, &#34;Egypt&#34;,  &#34;china&#34;) --&gt;
&lt;!-- ``` --&gt;
&lt;!-- # Visualizing confirmed cases with new cases --&gt;
&lt;!-- Inspired by [this minuteearth video](https://www.youtube.com/watch?v=54XLXg4fYsc&amp;feature=youtu.be&amp;fbclid=IwAR2WColkqpGMjnFwuKsTc2oEaYg9yfc2hZomaW89Q5sv46l-cv9u5tmKhmw). The thing about this visualization is that it doesn&#39;t plot the Cumulative number of confirmed cases with time, instead with the number of new cases on a log-scale, which is more intuitive. Multiple comparisons between countries with very different number of cases could be very made very clear, and it is very easy to detect whether things are getting better. --&gt;
&lt;!-- ```{r warning=FALSE} --&gt;
&lt;!-- COVID_confirmed_smoothed &lt;- COVID_confirmed_global_longer %&gt;%  --&gt;
&lt;!--   tidyr::nest(-country) %&gt;%  --&gt;
&lt;!--   dplyr::mutate(m = purrr::map(data, loess, --&gt;
&lt;!--                                                formula = new_cases ~ n_cases, span = 0.4), --&gt;
&lt;!--                 fitted = purrr::map(m, `[[`, &#34;fitted&#34;)) --&gt;
&lt;!-- COVID_confirmed_smoothed &lt;- COVID_confirmed_smoothed %&gt;% --&gt;
&lt;!--   dplyr::select(-m) %&gt;% --&gt;
&lt;!--   tidyr::unnest() --&gt;
&lt;!-- COVID_confirmed_smoothed2 &lt;- COVID_confirmed_smoothed %&gt;%  --&gt;
&lt;!--   dplyr::filter(country %in% c(&#34;US&#34;, &#34;China&#34;, &#34;Italy&#34;, &#34;Korea, South&#34;, &#34;Iran&#34;, &#34;Egypt&#34;, &#34;Spain&#34;, &#34;Germany&#34;, &#34;France&#34;, &#34;United Kingdom&#34;, &#34;Canada&#34;)) --&gt;
&lt;!-- ggplot(data = COVID_confirmed_smoothed2, aes(n_cases, fitted))+ --&gt;
&lt;!--   geom_path(data = COVID_confirmed_smoothed2,aes(n_cases,fitted,color = country, group = country))+ --&gt;
&lt;!--   theme_bw()+ --&gt;
&lt;!--   ylab(&#34;number of cases&#34;)+ --&gt;
&lt;!--   scale_y_log10(labels = function(x) format(x, scientific = FALSE))+ --&gt;
&lt;!--   scale_x_log10(labels = function(x) format(x, scientific = FALSE))+ --&gt;
&lt;!--   geom_dl(data = COVID_confirmed_smoothed2, aes(label = country), method = list(dl.combine(&#34;first.points&#34;, &#34;last.points&#34;), cex = 0.8))+ --&gt;
&lt;!--   xlab(label = &#34;Total confirmed cases&#34;)+ --&gt;
&lt;!--   ylab(label = &#34;number of new cases&#34;)+ --&gt;
&lt;!--   theme(legend.position=&#34;none&#34;) --&gt;
&lt;!-- ``` --&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>

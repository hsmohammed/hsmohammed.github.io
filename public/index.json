[{"authors":null,"categories":null,"content":"Hossameldin Mohammed is a PhD candidate and research assistant at the University of British Columbia. His research interests include traffic safety, traffic simulation, transportation demand modeling, generative machine learning, imitation learning, deep learning and experimental design.\n  Download my resum√©.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://hossameldinmohammed.netlify.app/author/hossameldin-mohammed/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/hossameldin-mohammed/","section":"authors","summary":"Hossameldin Mohammed is a PhD candidate and research assistant at the University of British Columbia. His research interests include traffic safety, traffic simulation, transportation demand modeling, generative machine learning, imitation learning, deep learning and experimental design.","tags":null,"title":"Hossameldin Mohammed","type":"authors"},{"authors":[],"categories":null,"content":"","date":1623330000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1623330000,"objectID":"d303344c85b881c12218c22fc6585664","permalink":"https://hossameldinmohammed.netlify.app/talk/exploring-the-impact-of-british-columbias-november-interventions-on-the-spread-of-covid-19/","publishdate":"2021-06-10T13:00:00Z","relpermalink":"/talk/exploring-the-impact-of-british-columbias-november-interventions-on-the-spread-of-covid-19/","section":"event","summary":"Public morale was low in BC during the peak of the COVID-19 pandemic in November 2020, as a second wave of infections was imminent Two substantial social distancing interventions were implemented within two weeks of each other to curve rising numbers of COVID-19 prior to the holidays: - November 7th: Restricted private gatherings between households - November 19th: Mandatory masks all public spaces, and non-essential travel was heavily discouraged What if these measures were not implemented at that time? What if they had been implemented sooner? How would daily case numbers have be impacted in these scenarios?  We explored these possibilities using a compartmental SEIR model in R, focusing on October 1st to December 15th","tags":[],"title":"Exploring the impact of British Columbia‚Äôs November interventions on the spread of COVID-19","type":"event"},{"authors":[],"categories":null,"content":"","date":1614690000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1614690000,"objectID":"48a5e109fd33b789bfc7979587835871","permalink":"https://hossameldinmohammed.netlify.app/talk/ai-based-generative-design/","publishdate":"2021-03-02T15:00:00Z","relpermalink":"/talk/ai-based-generative-design/","section":"event","summary":"Recent developments in deep learning algorithms such as generative adversarial networks (GANs) (Goodfellow et. al. 2014) has created a paradigm shift in architectural generative design. Advantages of GANs over traditional generative algorithms include the ability to generate and manipulate infinite number of unique surfaces. Training of such models include feeding a large library of surfaces into the network, the model then learns the important patterns and features of the training data to generate realistic examples. The model can be divided into a generator and a discriminator. The generator objective is to learn how to generate representations of the input training examples that can ‚Äúdeceive‚Äù the discriminator. The discriminator is a universal function approximator that outputs a probability of an input surface to be real or fake. As more and more training epochs are passed, a minimax loss function is minimized that allows for the generator to create surfaces that are close as possible to the real ones, and the discriminator to not be able to differentiate between real and fake images.","tags":[],"title":"AI-Based Generative Design","type":"event"},{"authors":["Hossameldin Mohammed","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://hossameldinmohammed.netlify.app/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Hossameldin Mohammed","Tarek Sayed","Alexander Bigazzi"],"categories":null,"content":"","date":1607299200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607299200,"objectID":"d5d20be84aa461b6d2f1df8ef2a1336c","permalink":"https://hossameldinmohammed.netlify.app/publication/journal-article2/","publishdate":"2020-12-07T00:00:00Z","relpermalink":"/publication/journal-article2/","section":"publication","summary":"Accurate modeling of bicycles in microsimulation tools is challenging due to the limited availability of detailed data, complexity of cyclist decision-making, and heterogeneity in cycling behavior. This paper proposes an agent-based bicycle simulation method in which generative adversarial imitation learning (GAIL) is used to infer the uncertain intentions and heterogeneous preferences of cyclists from observational data. The model is tested on videoderived data of cyclists on a unidirectional path in Vancouver, Canada. In cross-validation, multivariate distributions of movement variables such as speed, direction, and spacing are similar between observed and simulated cyclist trajectories. The model also performs well in comparison to two other cyclist simulation models from the literature. The proposed approach to agentbased microsimulation is a significant advancement, with continuous, non-linear, and stochastic representation of cyclist states, decisions, and actions. The enhanced consideration of cyclist diversity is necessary for developing bicycle networks for all ages and abilities of riders.","tags":["Source Themes"],"title":"Microscopic modeling of cyclists on off-street paths: a stochastic imitation learning approach","type":"publication"},{"authors":null,"categories":["R"],"content":"  R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1606875194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606875194,"objectID":"bf1eb249db79f10ace7d22321494165a","permalink":"https://hossameldinmohammed.netlify.app/post/2020-12-01-r-rmarkdown/","publishdate":"2020-12-01T21:13:14-05:00","relpermalink":"/post/2020-12-01-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Charts Academic supports the popular Plotly chart format.\nSave your Plotly JSON in your page folder, for example chart.json, and then add the {{\u0026lt; chart data=\u0026quot;chart\u0026quot; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./line-chart.json\", function(chart) { Plotly.plot('chart-764293518', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$  renders as\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\n1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Callouts Academic supports a shortcode for callouts, also referred to as asides, hints, or alerts. By wrapping a paragraph in {{% callout note %}} ... {{% /callout %}}, it will render as an aside.\n{{% callout note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /callout %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Spoilers Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.\n{{\u0026lt; spoiler text=\u0026quot;Click to view the spoiler\u0026quot; \u0026gt;}} You found me! {{\u0026lt; /spoiler \u0026gt;}}  renders as\nClick to view the spoiler You found me!\n Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it üôå ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://hossameldinmohammed.netlify.app/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Hossameldin Mohammed","Alexander Bigazzi","Tarek Sayed"],"categories":null,"content":"","date":1557187200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557187200,"objectID":"d6e6088f81e1b2f425d8eb99ae5a9e79","permalink":"https://hossameldinmohammed.netlify.app/publication/conference-paper2/","publishdate":"2019-05-07T00:00:00Z","relpermalink":"/publication/conference-paper2/","section":"publication","summary":"Although unconstrained cyclists may seem to move arbitrarily, it is hypothesized that their movements can be modeled given variables such as acceleration, change in direction and deviation from path centerline. Unconstrained cyclist trajectories can be thought of as correlated random walk movements, in which the state of the present time step is dependent on the previous time step. Hidden Markov Models (HMM) can be used to infer the hidden states that cyclist encounter at each time step given observations about their movement. The purpose of this research is to formalize a generative model that can describe unconstrained cyclist movement and be used to generate cyclist trajectories that are similar to observed ones. This model can then be combined with other constrained bicycle models to generate realistic interactions for bicycle microsimulation.","tags":["Source Themes"],"title":"Unconstrained Cyclist Trajectory Simulation for agent-based models","type":"publication"},{"authors":["Hossameldin Mohammed"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')     print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://hossameldinmohammed.netlify.app/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://hossameldinmohammed.netlify.app/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Hossameldin Mohammed","Alexander Bigazzi","Tarek Sayed"],"categories":null,"content":"","date":1546819200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546819200,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://hossameldinmohammed.netlify.app/publication/journal-article/","publishdate":"2019-01-07T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"A better understanding of cyclist behavior during various interactions is needed to enhance bicycle microsimulation models. This study aims to characterize cyclist maneuvers in following and overtaking interactions using multivariate finite mixture model-based clustering. Several variables that potentially affect cyclist state and future decisions are extracted from video data using computer vision techniques, including the longitudinal distance, lateral distance and speed difference between interacting cyclists. Observations of cyclists in following interactions are clustered into constrained and unconstrained states. Observations of overtaking cyclists are clustered into initiation, merging and post-overtaking states. Multivariate distributions within each cluster are examined, along with state transitions for each type of interaction. These characterizations are a key step toward development of agent-based bicycle traffic microsimulation models, which can be used to enhance bicycle facility planning and design, safety modeling, and energy modeling.","tags":["Source Themes"],"title":"Characterization of bicycle following and overtaking maneuvers on cycling paths","type":"publication"},{"authors":["Hossameldin Mohammed","Tarek Sayed","Alexander Bigazzi"],"categories":null,"content":"","date":1546819200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546819200,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://hossameldinmohammed.netlify.app/publication/conference-paper/","publishdate":"2019-01-07T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Reward functions are a key component in developing agent-based microsimulation models. The objective of this research is to estimate reward function parameters for cyclists in following interactions with other cyclists on bicycle paths. Decisions of cyclists (acceleration and direction) in following interactions are modeled as a finite state Markov Decision Process, in which the reward function describing the desired state of the cyclist is unknown. Two algorithms of imitation learning using Inverse Reinforcement Learning (IRL) are evaluated to estimate reward function parameters: Feature Matching (FM) and Maximum Entropy (ME) IRL. The algorithms are trained on 1297 cyclist trajectories in following interactions extracted from video data using computer vision, and then validated using a separate set of 349 trajectories. The estimated reward function parameters indicate how cyclists weigh the five state features in the reward function: speed, speed difference from leading cyclist, lateral position in path, lateral distance from leading cyclist, and longitudinal distance from leading cyclist. Following cyclists tend to prefer intermediate values of longitudinal and lateral distance to leading cyclists. Cyclists also prefer high speeds, with low speed difference from the leading cyclist and low deviation from the center of the path. Implementation of the reward functions derived from the FM and ME algorithms correctly predicted 58% and 67%, respectively, of the observed cyclist decisions (acceleration and direction) in the validation data set. This research is a key step toward developing operational bicycle traffic microsimulation models with applications such as facility planning and bicycle safety modeling.","tags":["Source Themes"],"title":"Toward agent-based microsimulation of cyclist following behavior: Estimation of reward function parameters using inverse reinforcement learning","type":"publication"},{"authors":["Hossameldin Mohammed"],"categories":null,"content":"","date":1481068800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1481068800,"objectID":"114eb2cc5a80e7a63a7ad85ac647049c","permalink":"https://hossameldinmohammed.netlify.app/publication/journal-article3/","publishdate":"2016-12-07T00:00:00Z","relpermalink":"/publication/journal-article3/","section":"publication","summary":"Traffic simulation has proved to be a vital tool for planning and operating transportation systems. Traffic simulation models need to be calibrated by adjusting model parameters to ensure the model‚Äôs ability to reproduce local traffic conditions and serve as a reliable test-bed for evaluating modification scenarios. This research developed and calibrated a mesoscopic traffic simulation model for the exceptionally large traffic network of Greater Cairo Region (GCR). The scope of the study is limited to calibrating traffic stream parameters, while a typical user equilibrium traffic assignment model was adopted. Open source traffic simulation software ‚ÄúDynusT‚Äù was used as a modeling platform. A wide range of field data was consolidated from previous related studies. The calibration procedure involved two levels: theoretical-based, and simulation based calibration. In the theoretical-based calibration stage, traffic stream parameters of the modified Greenshield‚Äôs traffic flow model was estimated using non-linear regression approach. On the other hand, the simulation-based calibration involved the estimation of the Anisotropic Mesoscopic Model parameter using a genetic algorithm optimization approach. A sensitivity analysis on estimated parameters values was conducted to verify the appropriateness of chosen values. Testing results revealed the potential of the adopted calibration approach and the credibility of estimated traffic stream parameters values. Limited discrepancy was observed between simulation-based link traffic volumes and actual ones in most observed links, with a normalized root mean square error (NRMSE) of 10.6 %.","tags":["Source Themes"],"title":"A Bi-Level Approach for Calibrating a Traffic Simulation Model of Greater Cairo Region","type":"publication"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://hossameldinmohammed.netlify.app/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://hossameldinmohammed.netlify.app/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://hossameldinmohammed.netlify.app/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"},{"authors":null,"categories":null,"content":"  Introduction This is a personal Rmarkdown document I have created to visualize the COVID-19 updates and some preliminary exploratory data analysis (EDA). The source of this data is the github repository created and maintained by the Coronavirus COVID-19 Global Cases by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU).\nsuppressPackageStartupMessages(library(tidyverse)) suppressPackageStartupMessages(library(forecast)) suppressPackageStartupMessages(library(zoo)) suppressPackageStartupMessages(library(xts)) suppressPackageStartupMessages(library(gridExtra)) suppressPackageStartupMessages(library(gghighlight)) suppressPackageStartupMessages(library(knitr)) suppressPackageStartupMessages(library(directlabels)) suppressPackageStartupMessages(library(scales)) suppressPackageStartupMessages(library(plotly)) #suppressPackageStartupMessages(library(rjson))  Reading the data COVID_confirmed_global_raw \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\u0026quot;) COVID_deaths_global_raw \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\u0026quot;) COVID_recovered_global_raw \u0026lt;- read_csv(\u0026quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv\u0026quot;)   Reshaping and formatting data # Reshape to longer format COVID_confirmed_global_longer \u0026lt;- COVID_confirmed_global_raw %\u0026gt;% pivot_longer(cols = c(\u0026#39;1/22/20\u0026#39;:names(COVID_confirmed_global_raw)[ncol(COVID_confirmed_global_raw)]), names_to = \u0026quot;date\u0026quot;, values_to = \u0026quot;n_cases\u0026quot;) COVID_deaths_global_longer \u0026lt;- COVID_deaths_global_raw %\u0026gt;% pivot_longer(cols = c(\u0026#39;1/22/20\u0026#39;:names(COVID_deaths_global_raw)[ncol(COVID_deaths_global_raw)]), names_to = \u0026quot;date\u0026quot;, values_to = \u0026quot;n_cases\u0026quot;) COVID_recovered_global_longer \u0026lt;- COVID_recovered_global_raw %\u0026gt;% pivot_longer(cols = c(\u0026#39;1/22/20\u0026#39;:names(COVID_recovered_global_raw)[ncol(COVID_recovered_global_raw)]), names_to = \u0026quot;date\u0026quot;, values_to = \u0026quot;n_cases\u0026quot;) # change column names colnames(COVID_confirmed_global_longer) \u0026lt;- c(\u0026#39;state\u0026#39;, \u0026#39;country\u0026#39;, \u0026#39;lat\u0026#39;, \u0026#39;long\u0026#39;,\u0026#39;date\u0026#39;, \u0026#39;n_cases\u0026#39;) colnames(COVID_deaths_global_longer) \u0026lt;- c(\u0026#39;state\u0026#39;, \u0026#39;country\u0026#39;, \u0026#39;lat\u0026#39;, \u0026#39;long\u0026#39;,\u0026#39;date\u0026#39;, \u0026#39;n_cases\u0026#39;) colnames(COVID_recovered_global_longer) \u0026lt;- c(\u0026#39;state\u0026#39;, \u0026#39;country\u0026#39;, \u0026#39;lat\u0026#39;, \u0026#39;long\u0026#39;,\u0026#39;date\u0026#39;, \u0026#39;n_cases\u0026#39;) # drop `state` column and create a `new_cases` column COVID_confirmed_global_longer \u0026lt;- COVID_confirmed_global_longer %\u0026gt;% select(-state)%\u0026gt;% group_by(country, date) %\u0026gt;% summarize(n_cases = sum(n_cases))  ## `summarise()` has grouped output by \u0026#39;country\u0026#39;. You can override using the `.groups` argument. COVID_deaths_global_longer \u0026lt;- COVID_deaths_global_longer %\u0026gt;% select(-state)%\u0026gt;% group_by(country, date) %\u0026gt;% summarize(n_cases = sum(n_cases))  ## `summarise()` has grouped output by \u0026#39;country\u0026#39;. You can override using the `.groups` argument. COVID_recovered_global_longer \u0026lt;- COVID_recovered_global_longer %\u0026gt;% select(-state) %\u0026gt;% group_by(country, date) %\u0026gt;% summarize(n_cases = sum(n_cases))  ## `summarise()` has grouped output by \u0026#39;country\u0026#39;. You can override using the `.groups` argument. # convert date columns from character to date format COVID_confirmed_global_longer$date \u0026lt;- as.Date(COVID_confirmed_global_longer$date, format = \u0026#39;%m/%d/%Y\u0026#39;) COVID_deaths_global_longer$date \u0026lt;- as.Date(COVID_deaths_global_longer$date, format = \u0026#39;%m/%d/%Y\u0026#39;) COVID_recovered_global_longer$date \u0026lt;- as.Date(COVID_recovered_global_longer$date, format = \u0026#39;%m/%d/%Y\u0026#39;) COVID_confirmed_global_longer \u0026lt;- COVID_confirmed_global_longer %\u0026gt;% arrange(country, date) %\u0026gt;% mutate(new_cases = n_cases-lag(n_cases, default = 0)) COVID_deaths_global_longer \u0026lt;- COVID_deaths_global_longer %\u0026gt;% arrange(country, date) %\u0026gt;% mutate(new_cases = n_cases-lag(n_cases, default = 0)) COVID_recovered_global_longer \u0026lt;- COVID_recovered_global_longer %\u0026gt;% arrange(country, date) %\u0026gt;% mutate(new_cases = n_cases-lag(n_cases, default = 0)) Let‚Äôs look at the current data format\nknitr::kable(head(COVID_confirmed_global_longer),format = \u0026#39;markdown\u0026#39;)   country date n_cases new_cases    Afghanistan 20-01-22 0 0  Afghanistan 20-01-23 0 0  Afghanistan 20-01-24 0 0  Afghanistan 20-01-25 0 0  Afghanistan 20-01-26 0 0  Afghanistan 20-01-27 0 0     creating some functions for quick stats world_summary \u0026lt;- function() { df1 \u0026lt;- COVID_confirmed_global_longer %\u0026gt;% group_by(country) %\u0026gt;% summarize(n_cases_today = max(n_cases), new_cases_today = dplyr::last(new_cases)) %\u0026gt;% ungroup() %\u0026gt;% summarize(n_cases_total = sum(n_cases_today), new_cases_total = sum(new_cases_today)) df2 \u0026lt;- COVID_deaths_global_longer %\u0026gt;% group_by(country) %\u0026gt;% summarize(n_cases_today = max(n_cases), new_cases_today = dplyr::last(new_cases)) %\u0026gt;% ungroup() %\u0026gt;% summarize(n_cases_total = sum(n_cases_today), new_cases_total = sum(new_cases_today)) df3 \u0026lt;- COVID_recovered_global_longer %\u0026gt;% group_by(country) %\u0026gt;% summarize(n_cases_today = max(n_cases), new_cases_today = dplyr::last(new_cases)) %\u0026gt;% ungroup() %\u0026gt;% summarize(n_cases_total = sum(n_cases_today), new_cases_total = sum(new_cases_today)) print(paste0(\u0026quot;number of total confirmed cases in the world as of today: \u0026quot;, df1$n_cases_total, \u0026quot; with \u0026quot;, df1$new_cases_total, \u0026quot; new cases\u0026quot;)) print(paste0(\u0026quot;number of total deaths in the world as of today: \u0026quot;, df2$n_cases_total, \u0026quot; with \u0026quot;, df2$new_cases_total, \u0026quot; new deaths\u0026quot;)) print(paste0(\u0026quot;number of total recovered cases in the world as of today: \u0026quot;, df3$n_cases_total, \u0026quot; with \u0026quot;, df3$new_cases_total, \u0026quot; new cases\u0026quot;)) } country_summary \u0026lt;- function(country1) { df1 \u0026lt;- COVID_confirmed_global_longer %\u0026gt;% group_by(country) %\u0026gt;% dplyr::filter(country==country1) %\u0026gt;% summarize(n_cases_today = max(n_cases), new_cases_today = dplyr::last(new_cases)) df2 \u0026lt;- COVID_deaths_global_longer %\u0026gt;% group_by(country)%\u0026gt;% dplyr::filter(country==country1) %\u0026gt;% summarize(n_cases_today = max(n_cases), new_cases_today = dplyr::last(new_cases)) df3 \u0026lt;- COVID_recovered_global_longer %\u0026gt;% group_by(country)%\u0026gt;% dplyr::filter(country==country1) %\u0026gt;% summarize(n_cases_today = max(n_cases), new_cases_today = dplyr::last(new_cases)) # print(paste0(\u0026quot;number of confirmed cases in \u0026quot;, country1, \u0026quot; as of today: \u0026quot;, df1$n_cases_today, \u0026quot; with \u0026quot;, df1$new_cases_today, \u0026quot; new cases\u0026quot;)) # df1$n_cases_today print(paste0(\u0026quot;number of deaths in \u0026quot;, country1, \u0026quot; as of today: \u0026quot;, df2$n_cases_today, \u0026quot; with \u0026quot;, df2$new_cases_today, \u0026quot; new deaths\u0026quot;)) # df2$n_cases_today print(paste0(\u0026quot;number of recovered cases in \u0026quot;, country1, \u0026quot; as of today: \u0026quot;, df3$n_cases_today, \u0026quot; with \u0026quot;, df3$new_cases_today, \u0026quot; new cases\u0026quot;)) # df3$n_cases_today } world_summary() ## [1] \u0026quot;number of total confirmed cases in the world as of today: 227649349 with 593099 new cases\u0026quot; ## [1] \u0026quot;number of total deaths in the world as of today: 4679139 with 8881 new deaths\u0026quot; ## [1] \u0026quot;number of total recovered cases in the world as of today: 137249983 with 0 new cases\u0026quot; country_summary(\u0026quot;US\u0026quot;) ## [1] \u0026quot;number of confirmed cases in US as of today: 41993789 with 207886 new cases\u0026quot; ## [1] \u0026quot;number of deaths in US as of today: 672635 with 2635 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in US as of today: 6298082 with 0 new cases\u0026quot; country_summary(\u0026quot;Italy\u0026quot;) ## [1] \u0026quot;number of confirmed cases in Italy as of today: 4627699 with 4544 new cases\u0026quot; ## [1] \u0026quot;number of deaths in Italy as of today: 130233 with 66 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in Italy as of today: 4144608 with 0 new cases\u0026quot; country_summary(\u0026quot;Spain\u0026quot;) ## [1] \u0026quot;number of confirmed cases in Spain as of today: 4929546 with 3222 new cases\u0026quot; ## [1] \u0026quot;number of deaths in Spain as of today: 85783 with 44 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in Spain as of today: 150376 with 0 new cases\u0026quot; country_summary(\u0026quot;China\u0026quot;) ## [1] \u0026quot;number of confirmed cases in China as of today: 107838 with 49 new cases\u0026quot; ## [1] \u0026quot;number of deaths in China as of today: 4851 with 0 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in China as of today: 99228 with 0 new cases\u0026quot; country_summary(\u0026quot;Egypt\u0026quot;) ## [1] \u0026quot;number of confirmed cases in Egypt as of today: 295639 with 588 new cases\u0026quot; ## [1] \u0026quot;number of deaths in Egypt as of today: 16935 with 14 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in Egypt as of today: 232179 with 0 new cases\u0026quot; country_summary(\u0026quot;Germany\u0026quot;) ## [1] \u0026quot;number of confirmed cases in Germany as of today: 4137062 with 9904 new cases\u0026quot; ## [1] \u0026quot;number of deaths in Germany as of today: 92928 with 22 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in Germany as of today: 3659260 with 0 new cases\u0026quot; country_summary(\u0026quot;France\u0026quot;) ## [1] \u0026quot;number of confirmed cases in France as of today: 7029959 with 7756 new cases\u0026quot; ## [1] \u0026quot;number of deaths in France as of today: 116618 with 107 new deaths\u0026quot; ## [1] \u0026quot;number of recovered cases in France as of today: 415111 with 0 new cases\u0026quot; % mutate(country_sum = ifelse(n_cases  5000, country,\"other\")) -- % group_by(country_sum) -- % summarize(count = max(n_cases)) -- % plot_ly(labels = ~country_sum, values = ~count, text = ~country_sum) -- % add_pie(hole = 0.4) -- % layout(title = \"Confirmed cases worldwide\", showlegend = F, -- % -- % -- % -- % -- % -- % -- % -- % -- % -- % --  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"fc8990abd760d45d7f813c8d85eb5707","permalink":"https://hossameldinmohammed.netlify.app/post/1/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/1/","section":"post","summary":"Introduction This is a personal Rmarkdown document I have created to visualize the COVID-19 updates and some preliminary exploratory data analysis (EDA). The source of this data is the github repository created and maintained by the Coronavirus COVID-19 Global Cases by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU).","tags":null,"title":"COVID-19 Exploratory Data Analysis","type":"post"},{"authors":["Hossameldin Mohammed","Alexander Bigazzi","Tarek Sayed"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"957f467e8471e6fcee579e2cd5755e24","permalink":"https://hossameldinmohammed.netlify.app/publication/preprint2/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/publication/preprint2/","section":"publication","summary":"Understanding and modeling cyclist movement patterns is an essential step in developing agent- based microsimulation models. The aim of this study is to infer how cyclists in following interactions weigh different state features, such as relative distances and speeds, when making guidance decisions. Cyclist guidance decisions are modeled as a continuous state and action Markov Decision Process (MPD). Two Inverse Reinforcement Learning (IRL) algorithms are evaluated to estimate the MPD reward function in a linear form based on Maximum Entropy (ME) and in a nonlinear form based on Gaussian Processes (GP). The algorithms are trained on 856 cyclist trajectories in following interactions extracted from video data using computer vision, and then validated using a separate set of 172 trajectories. The estimated reward functions imply cyclist preferences for low lateral distances, path deviations, speed differences, accelerations and direction angles, but high longitudinal distances from leading cyclists. The mean and variance of the reward function learned using GP can be applied to simulate heterogeneous cyclist preferences and behavior. Predicted trajectories based on Q-learning with the linear and non-linear reward functions are compared to the validation data. This research is a fundamental step toward developing operational bicycle traffic microsimulation models with applications such as facility planning and bicycle safety modeling. Key novel aspects are the investigation of continuous, non- linear, and stochastic reward functions for cyclist agents using real-world observational data.","tags":["Source Themes"],"title":"Inferring Nonlinear Reward Functions for Cyclists in Following Interactions Using Continuous Inverse Reinforcement Learning","type":"publication"},{"authors":["Hossameldin Mohammed","Alexander Bigazzi","Tarek Sayed"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://hossameldinmohammed.netlify.app/publication/preprint/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Accurate modeling of bicycles in traffic calls for taking into account individualistic actions and behavioural schemes in different scenarios. Bicycle traffic is characterized by possessing significant unobserved heterogeneity, with the differences between individual cyclists driving how cyclists behave as a group. A Generative Variational Autoencoder-based model is developed to serve for two purposes. First, the encoder part summarizes the individual differences between unconstrained cyclists to a more compact latent dimension layer. Second, a decoder part where a trajectory is reconstructed using only coordinates of that compact latent layer. Different groups representing different styles of cyclists are identified using Gaussian mixture model (GMM) clustering. The model proved high reconstruction accuracy with a root mean square error of about 0.32 meters. Latent variables were clustered into four classes representing different styles of cyclists. When reflecting the clustering results on motion variables, such as speed, acceleration, jerk and directions angles, were shown to produce clearly different distributions. The model and results could help elevating the accuracy of bicycle microsimulation models and gain deeper understanding on the heterogeneity in bicycle traffic behaviour.","tags":["Source Themes"],"title":"Variational inference-based generative unconstrained bicycle trajectories microsimulation","type":"publication"}]